generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 회원정보
model User {
  id                        String                      @id @default(uuid())
  email                     String                      @map("email") @db.VarChar(100)
  password                  String                      @map("password") @db.VarChar(255)
  name                      String                      @map("name") @db.VarChar(100)
  mobilePhone               String                      @map("mobile_phone") @db.VarChar(15)
  image                     String?                     @map("image") @db.VarChar(2000)
  createdAt                 DateTime                    @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt                 DateTime                    @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  deletedAt                 DateTime?                   @map("deleted_at") @db.Timestamp(0)
  linkedProvider            LinkedProvider[]
  customerInfo              CustomerInfo[]
  passwordResetVerification PasswordResetVerification[]

  @@unique([email, mobilePhone])
  @@map("user")
}

enum Provider {
  GOOGLE
  KAKAO
  NAVER
}

// OAuth 2 연결 정보 (구글, 카카오, 네이버)
model LinkedProvider {
  id        Int       @id @default(autoincrement())
  userId    String    @map("user_id")
  provider  Provider
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  deletedAt DateTime? @map("deleted_at") @db.Timestamp(0)
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([userId])
  @@map("linked_provider")
}

// 고객정보 (회원 + 비회원) -> 상품구매 시 해당 정보 저장 & 읽기
model CustomerInfo {
  id            Int       @id @default(autoincrement())
  userId        String?   @map("user_id")
  email         String    @map("email") @db.VarChar(100)
  name          String    @map("name") @db.VarChar(100)
  mobilePhone   String    @map("mobile_phone") @db.VarChar(15)
  phone         String?   @map("phone") @db.VarChar(15)
  zipCode       String?   @map("zip_code") @db.Char(5)
  addressBase   String?   @map("address_base") @db.VarChar(255)
  addressDetail String?   @map("address_detail") @db.VarChar(255)
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt     DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  deletedAt     DateTime? @map("deleted_at") @db.Timestamp(0)
  user          User?     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([userId])
  @@map("customer_info")
}

// 알림메시지 발송 방식
enum SendMethod {
  MAIL
  SMS
}

// 비밀번호 초기화 인증
model PasswordResetVerification {
  userId     String     @map("user_id")
  sendMethod SendMethod @map("send_method")
  value      String     @db.VarChar(64)
  createdAt  DateTime   @default(now()) @map("created_at") @db.Timestamp(0)
  expiredAt  DateTime   @map("expired_at") @db.Timestamp(0)
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([userId, sendMethod])
  @@index([value])
  @@map("password_reset_verification")
}
